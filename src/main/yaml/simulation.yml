incarnation: protelis

environment:
  type: OSMEnvironment
  parameters: ["cesena.pbf", true, true]

variables:
  max_lat: &max_lat
    formula: 44.14795317094557
  min_lat: &min_lat
    formula: 44.13340676305022
  max_lon: &max_lon
    formula: 12.267570291912632
  min_lon: &min_lon
    formula: 12.235568921311268
  latitude_space: &latitude_space
    formula: max_lat - min_lat
  longitude_space: &longitude_space
    formula: max_lon - min_lon
  # Simulations variables
  device_count: &device_count
    type: GeometricVariable
    parameters: [ 5, 5, 50, 2 ]
  behaviour_cost: &behaviour_cost
    type: ArbitraryVariable
    parameters: [350.0, [350.0, 550.0, 1000.0]]
  communication_cost: &communication_cost
    type: ArbitraryVariable
    parameters: [ 150.0, [ 150.0] ]
  sensors_cost: &sensors_cost
    type: ArbitraryVariable
    parameters: [ 75.0, [ 75.0 ] ]
  intra_comm_cost: &intra_comm_cost
    type: ArbitraryVariable
    parameters: [ 100.0, [ 100.0 ] ]
  range: &range
    type: ArbitraryVariable
    parameters: [50, [10, 20]]
  seed: &seed
    min: 0
    max: 4
    step: 1
    default: 0

seeds:
  scenario: *seed
  simulation: *seed

network-model:
  type: ConnectWithinDistance
  parameters: [*range]

_random-target: &random-target
  - time-distribution: 0.5
    program: org:protelis:randomTarget

_discharge: &discharge
  - time-distribution: 0.5
    program: org:protelis:dischargeBattery

_setup-device: &setup-device
  - type: Event
    time-distribution:
      type: Trigger
      parameters: 0
    actions:
      - type: RunProtelisProgram
        parameters: org:protelis:setupDevice

_move: &move
  - type: Event
    time-distribution: 1.0
    actions:
      - type: TargetMapWalker
        parameters: [target, 1.4]
    conditions:
      - type: MoleculeHasConcentration
        parameters: [isCharging, false]
  - type: Event # Triggers the first target
    time-distribution:
      type: Trigger
      parameters: 0
    actions:
      - type: RunProtelisProgram
        parameters: org:protelis:randomTarget

_device: &device
  type: Rectangle
  parameters: [*device_count, *min_lat, *min_lon, *latitude_space, *longitude_space]
  programs: [*setup-device, *random-target, *move, *discharge]
  properties:
    type: it.nicolasfarabegoli.pulverization.OnLowBattery
  contents:
    - molecule: minLon
      concentration: *min_lon
    - molecule: maxLon
      concentration: *max_lon
    - molecule: minLat
      concentration: *min_lat
    - molecule: maxLat
      concentration: *max_lat
    - molecule: target
      concentration: [0, 0]
    - molecule: currentCapacity
      concentration: 4500.0 # The actual battery capacity. This value is randomized in setupDevice.pt
    - molecule: batteryCapacity
      concentration: 4500.0 # The maximum capacity for a battery of a device [mAh]
    - molecule: minCapacity
      concentration: 2000.0 # The minimum capacity for a battery of a device [mAh]
    - molecule: rechargeRate
      concentration: 4500.0 # The recharge rate of the battery 1C (recharge rate) [mA]
    - molecule: reconfigurationCharge
      concentration: 1500.0 # The battery level below which a configuration is triggered [mAh]
    - molecule: behaviourDischargeRate
      concentration: *behaviour_cost # The discharge rate caused by the execution of the _Behaviour_ component in the device [mAh]
    - molecule: communicationDischargeRate
      concentration: *communication_cost # The discharge rate caused by the execution of the _Communication_ component in the device [mAh]
    - molecule: sensorsDischargeRate
      concentration: *sensors_cost # The discharge rate caused by the execution of the _Sensors_ component in the device [mAh]
    - molecule: intraComponentCommCost
      concentration: *intra_comm_cost # The discharge rate caused by the communication with a remote component (pulverization) [mAh]
    - molecule: behaviourInDevice
      concentration: true # Set to `true` if the _Behaviour_ component is executed in the device
    - molecule: communicationInDevice
      concentration: true # Set to `true` if the _Communication_ component is executed in the device
    - molecule: sensorsInDevice
      concentration: true # Set to `true` if the _Sensors_ component is executed in the device
    - molecule: isCharging
      concentration: false # Set `true` if the device is charging

deployments:
  - *device

terminate:
  - type: AfterTime
    parameters: 43200 # 12h (43200 seconds)

export:
  - type: CSVExporter
    parameters:
      exportPath: "data"
      fileNameRoot: "export"
      interval: 60
    data:
      - type: Time
        parameters:
          precision: 5
      - molecule: "behaviourInDevice"
        aggregators: [ sum ]
        precision: 5
      - molecule: "currentCapacity"
        aggregators: [ sum ]
        precision: 5
      - molecule: "realtimeConsumption"
        aggregators: [ sum ]
        precision: 5
        value-filter: onlyfinite
